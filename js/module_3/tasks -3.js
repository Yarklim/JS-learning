//? –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥, –æ–Ω–æ–≤–∏–≤—à–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –æ–±'—î–∫—Ç–∞ apartment:
//? —Ü—ñ–Ω—É —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –Ω–∞ 5000;
//? —Ä–µ–π—Ç–∏–Ω–≥ –∫–≤–∞—Ä—Ç–∏—Ä–∏ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ rating –Ω–∞ 4.7;
//? —ñ–º'—è –≤–ª–∞—Å–Ω–∏–∫–∞ —É –≤–∫–ª–∞–¥–µ–Ω—ñ–π –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ name –Ω–∞ "Henry Sibola";
//? –º–∞—Å–∏–≤ —Ç–µ–≥—ñ–≤ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ tags, –¥–æ–¥–∞–≤—à–∏ –≤ –∫—ñ–Ω–µ—Ü—å —Ä—è–¥–æ–∫ "trusted".

// const apartment = {
// 	imgUrl: "https://via.placeholder.com/640x480",
// 	descr: "Spacious apartment in the city center",
// 	rating: 4,
// 	price: 2153,
// 	tags: ["premium", "promoted", "top"],
// 	owner: {
// 	  name: "Henry",
// 	  phone: "982-126-1588",
// 	  email: "henry.carter@aptmail.com",
// 	},
// };
// apartment.price = 5000;
// apartment.rating = 4.7;
// apartment.owner.name = "Henry Sibola";
// apartment.tags.push("trusted");

// console.log(apartment);

//? –î–æ–¥–∞–π –æ–±'—î–∫—Ç—É apartment –∫—ñ–ª—å–∫–∞ –Ω–æ–≤–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π:
//? area - –ø–ª–æ—â–∞ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏—Ö –º–µ—Ç—Ä–∞—Ö, —á–∏—Å–ª–æ 60;
//? rooms - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç, —á–∏—Å–ª–æ 3;
//? location - –º—ñ—Å—Ü–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –∫–≤–∞—Ä—Ç–∏—Ä–∏, –æ–±'—î–∫—Ç –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–∫–ª–∞–¥–µ–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏;
//? country - –∫—Ä–∞—ó–Ω–∞, —Ä—è–¥–æ–∫ "Jamaica";
//? city - –º—ñ—Å—Ç–æ, —Ä—è–¥–æ–∫ "Kingston".

// const apartment = {
// 	imgUrl: "https://via.placeholder.com/640x480",
// 	descr: "Spacious apartment in the city center",
// 	rating: 4.7,
// 	price: 5000,
// 	tags: ["premium", "promoted", "top", "trusted"],
// 	owner: {
// 	  name: "Henry Sibola",
// 	  phone: "982-126-1588",
// 	  email: "henry.carter@aptmail.com",
// 	},
// };
// apartment.area = 60;
// apartment.rooms = 3;
// apartment.location = {
// 		country: "Jamaica",
// 		city: "Kingston",
// };
// console.log(apartment);

//? –ü–µ—Ä–µ–±–µ—Ä–∏ –æ–±—ä–µ–∫—Ç apartment –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª for...in –∏ –∑–∞–ø–∏—à–∏ –≤ –º–∞—Å—Å–∏–≤ keys –≤—Å–µ –µ–≥–æ –∫–ª—é—á–∏, –∞ –≤ –º–∞—Å—Å–∏–≤ values –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤.
//? –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—à–µ–Ω–∏—è, –¥–æ–±–∞–≤–∏–≤ –≤ —Ü–∏–∫–ª for...in –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ.
// const apartment = {
//   descr: 'Spacious apartment in the city center',
//   rating: 4,
//   price: 2153,
// };
// const keys = [];
// const values = [];
// for (const key in apartment) {
//   if (apartment.hasOwnProperty(key)) {
//     keys.push(key);
//     values.push(apartment[key]);
//   }
// }
// console.log(keys);
// console.log(values);

//? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é countProps(object), –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ object.
//? –ò—Å–ø–æ–ª—å–∑—É–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é propCount –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞.
// function countProps(object) {
//   let propCount = 0;

//   for (const key in object) {
//     if (object.hasOwnProperty(key)) {
//       propCount += 1;
//     }
//   }
//   return propCount;
// }
// console.log(countProps({ mail: 'poly@mail.com', isOnline: true, score: 500 }));

//? –ü–µ—Ä–µ–±–µ—Ä–∏ –æ–±—ä–µ–∫—Ç apartment –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ Object.keys() –∏ —Ü–∏–∫–ª for...of.
//? –ó–∞–ø–∏—à–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é keys –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ apartment, –∏ –¥–æ–±–∞–≤—å –≤ –º–∞—Å—Å–∏–≤ values –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤.
// const apartment = {
//   descr: 'Spacious apartment in the city center',
//   rating: 4,
//   price: 2153,
// };
// const values = [];
// const keys = Object.keys(apartment);

// for (const key of keys) {
//   values.push(apartment[key]);
// }
// console.log(keys);
// console.log(values);

//? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é countTotalSalary(salaries) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∑–∞—Ä–ø–ª–∞—Ç, –≥–¥–µ –∏–º—è —Å–≤–æ–π—Å—Ç–≤–∞ —ç—Ç–æ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —ç—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞.
//? –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –≤–µ—Ä–Ω—É—Ç—å –µ—ë.
//? –ò—Å–ø–æ–ª—å–∑—É–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é totalSalary –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞—Ä–ø–ª–∞—Ç—ã.
// function countTotalSalary(salaries) {
//   let totalSalary = 0;
//   // Change code below this line
//   const values = Object.values(salaries);
//   for (let i of values) {
//     totalSalary += i;
//   }
//   // Change code above this line
//   return totalSalary;
// }
// console.log(countTotalSalary({}));
// console.log(countTotalSalary({ mango: 100, poly: 150, alfred: 80 }));
// console.log(countTotalSalary({ kiwi: 200, poly: 50, ajax: 150 }));

//? ====== –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ =======
const cart = {
  items: [],
  getItems() {
    return this.items;
  },
  add(product) {
    for (const item of this.items) {
      if (item.name === product.name) {
        item.quantity += 1;
        return;
      }
    }
    const newProduct = {
      ...product,
      quantity: 1,
    };

    this.items.push(newProduct);
  },
  remove(productName) {
    const { items } = this;

    for (let i = 0; i < items.length; i += 1) {
      const { name } = items[i];

      if (productName === name) {
        items.splice(i, 1);
      }
    }
  },
  clear() {
    this.items = [];
  },
  countTotalPrice() {
    const { items } = this;
    let total = 0;

    for (const { price, quantity } of items) {
      total += price * quantity;
    }

    return total;
  },
  increaseQuantity(productName) {},
  decreaseQuantity(productName) {},
};

console.log(cart.getItems());

cart.add({ name: 'üçÖ', price: 50 });
cart.add({ name: 'üçã', price: 60 });
cart.add({ name: 'üçì', price: 60 });
cart.add({ name: 'üçè', price: 110 });
cart.add({ name: 'üçè', price: 110 });
cart.add({ name: 'üçè', price: 110 });

console.table(cart.getItems());

cart.remove('üçÖ');
console.table(cart.getItems());

// cart.clear();
// console.log(cart.getItems());

// cart.increaseQuantity('üçì');
// console.table(cart.getItems);

// cart.decreaseQuantity('üçè');
// cart.decreaseQuantity('üçã');
// console.table(cart.getItems);

console.log('Total: ', cart.countTotalPrice());

//? ====== spread ======
// const array = [1, 2, 3];
// const arrayBig = ['A', 'B', 'C'];
// const newArray = [0, ...array, 4, 5, 6, 7, ...arrayBig];

// console.log(newArray);
// console.log(array);

//? –ù–∞–π—Ç–∏ —Å–∞–º–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ
// const numbers = [18, 17, 46, 90, 4, 24, 32];

// console.log(Math.min(...numbers));

//? –†–∞—Å–ø—ã–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
//? Object.assign() –∏ spread
// const a = { x: 1, y: 2 };
// const b = { x: 0, z: 3 };

// // const c = Object.assign({}, a, b); // —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥

// const c = { ...a, ...b }; // —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥

// console.log(c); // {x: 0, y: 2, z: 3}

//? --------------------------------------

// function findMatches(arr, ...args) {
//   const matches = [];

//   for (const arg of args) {
//     if (arr.includes(arg)) {
//       matches.push(arg);
//     }
//   }
//   return matches;
// }
// console.log(findMatches([1, 2, 3, 4, 5], 1, 8, 2, 7));

//? --------------------------------------

// –î–æ–ø–æ–ª–Ω–∏ –º–µ—Ç–æ–¥ updateBook(oldName, newName) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –∏–∑–º–µ–Ω—è–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ —Å oldName –Ω–∞ newName –≤ —Å–≤–æ–π—Å—Ç–≤–µ books.
// –ò—Å–ø–æ–ª—å–∑—É–π indexOf() –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∏ splice() –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç
const bookShelf = {
  books: ['The last kingdom', 'Haze', 'The guardian of dreams'],
  updateBook(oldName, newName) {
    // Change code below this line
    // Change code above this line
  },
};

// –ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ bookShelf.updateBook("Haze", "Dungeon chronicles"), –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ books —ç—Ç–æ –º–∞—Å—Å–∏–≤ ["The last kingdom", "Dungeon chronicles", "The guardian of dreams"]

// –ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ bookShelf.updateBook("The last kingdom", "Dune"), –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ books —ç—Ç–æ –º–∞—Å—Å–∏–≤ ["Dune", "Haze", "The guardian of dreams"]
